"use strict";(self.webpackChunknest_commander_monorepo=self.webpackChunknest_commander_monorepo||[]).push([[496],{9613:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,g=c["".concat(s,".").concat(d)]||c[d]||u[d]||o;return n?a.createElement(g,i(i({ref:t},m),{},{components:n})):a.createElement(g,i({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9914:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>l,contentTitle:()=>s,metadata:()=>p,toc:()=>m,default:()=>c});var a=n(98),r=n(6862),o=(n(9496),n(9613)),i=["components"],l={title:"Plugins",sidebar_label:"Plugins"},s=void 0,p={unversionedId:"features/plugins",id:"features/plugins",isDocsHomePage:!1,title:"Plugins",description:"As of version 2.3.0, you can build your CLI with the ability to read for extra plugins that are developed by other people. By using the usePlugins option with the CommandFactory, you'll be setting up you shiny new CLI to expect to find a config file with a plugins property that is an array of strings, either as the locations of packages in a local environment, or npm package names.",source:"@site/docs/features/plugins.md",sourceDirName:"features",slug:"/features/plugins",permalink:"/nest-commander/docs/features/plugins",editUrl:"https://github.com/jmcdo29/nest-commander/edit/main/apps/docs/docs/features/plugins.md",tags:[],version:"current",frontMatter:{title:"Plugins",sidebar_label:"Plugins"},sidebar:"docs",previous:{title:"CommandFactory",permalink:"/nest-commander/docs/features/factory"},next:{title:"Installation",permalink:"/nest-commander/docs/testing/installation"}},m=[{value:"The Config File",id:"the-config-file",children:[]},{value:"The Plugins",id:"the-plugins",children:[]}],u={toc:m};function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"As of version 2.3.0, you can build your CLI with the ability to read for extra plugins that are developed by other people. By using the ",(0,o.kt)("inlineCode",{parentName:"p"},"usePlugins")," option with the ",(0,o.kt)("inlineCode",{parentName:"p"},"CommandFactory"),", you'll be setting up you shiny new CLI to expect to find a config file with a ",(0,o.kt)("inlineCode",{parentName:"p"},"plugins")," property that is an array of strings, either as the locations of packages in a local environment, or npm package names."),(0,o.kt)("h2",{id:"the-config-file"},"The Config File"),(0,o.kt)("p",null,"The config file, by default, can be any of the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},".nest-commanderrc"),(0,o.kt)("li",{parentName:"ul"},".nest-commanderrc.json"),(0,o.kt)("li",{parentName:"ul"},".nest-commanderrc.yaml"),(0,o.kt)("li",{parentName:"ul"},".nest-commanderc.yml"),(0,o.kt)("li",{parentName:"ul"},"nest-commander.json"),(0,o.kt)("li",{parentName:"ul"},"nest-commander.yaml"),(0,o.kt)("li",{parentName:"ul"},"nest-commander.yml")),(0,o.kt)("p",null,"If you'd lke to use a name other than ",(0,o.kt)("inlineCode",{parentName:"p"},"nest-commander"),", you can pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"cliName")," option to the ",(0,o.kt)("inlineCode",{parentName:"p"},"CommandFactory")," as well."),(0,o.kt)("p",null,"Now the config file should be incredibly simple, just a JSON object with a ",(0,o.kt)("inlineCode",{parentName:"p"},"plugins")," property that is an array of strings, e.g."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "plugins": ["nest-commander-plugin", "./my/local/plugin"]\n}\n')),(0,o.kt)("h2",{id:"the-plugins"},"The Plugins"),(0,o.kt)("p",null,"Each plugin registered needs to have a ",(0,o.kt)("strong",{parentName:"p"},"default")," export that is a Nest module that adds the new command as a ",(0,o.kt)("inlineCode",{parentName:"p"},"provider"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=src/plugin.command.ts",title:"src/plugin.command.ts"},"@Command({ name: 'plugin' })\nexport class PluginCommand implements CommandRunner {\n  async run() {\n    console.log('From the plugin!');\n  }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=src/plugin.module.ts",title:"src/plugin.module.ts"},"@Module({\n  providers: [PluginCommand]\n})\nexport class PluginModule {}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=src/index.ts",title:"src/index.ts"},"import { PluginModule } from './plugin.module';\nexport default PluginModule;\n")),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If the users of your CLI do not have a config file, an error will be thrown. ",(0,o.kt)("inlineCode",{parentName:"p"},"nest-commander")," expects that if ",(0,o.kt)("inlineCode",{parentName:"p"},"usePlugins")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," that there ",(0,o.kt)("strong",{parentName:"p"},"will")," be a config file."))))}c.isMDXComponent=!0}}]);